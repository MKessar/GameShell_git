


## git intro
1: git clone of documentation
2: evince doc.pdf


## git config (MK)
1. Create login account (Former Contrib/git03)
2. config name in git => get the wand (github_basics/git02)

## git basics  (MK)
1. create new repo + clone (github_basics/git01)
2. craft new spell + add + commit +push (github_basics/git03) (github_basics/git05) (github_basics/git06 folder) 
3. git log (github_basics/git08) ex: git log --pretty=oneline | head -n 10
4. modify spell + git status
5. git diff
6. add + diff => --staged
7. git commit (github_basics/git05)
7. git mv + push (github_basics/git04) 
8. git rm  + push (github_basics/git07) 




## git config advanced  (MK)
1. config ssh => get the two rings (github_ssh_key/git01) 
2(optionel). lien vers de la doc (URL) pour config multiple name in git => get multiple  wand (si on a le temps) firefox URL


## git advanced (MH)
3. git revert 


---------------
Début de la bataille contre le dragon.

## git branching (MH)
1. clone al far repo 
2. cd inside it and create local branches
2a. add questions on Fast forward and real merge
3. Merge FF on main from existing branch
4. Create branch power + contrib  + commit
5. back on main + merge from existing branch (no conflict)
5a. checkout a previous commit and back most recent commit to explore the content of the spell
6. merge power branch (conflict)
7. delete all branches power, new_ingredient and add_rune
8. add remote portal Al Jeit
9. merge existing branch (conflict)
10. Explore history and recover ancient technique. Implement it in the latest version of the spell => kill the dragon but it resurrects


## git forking (MH)
3. Fork repo with initial content and some branches + contribution with a new spell (no conflict)
4. Fork repo with initial content and some branches + contribution with spell modification (with conflict)
5. final 1: everybody needs to contribute to craft a spell powerful enough
6. final 2: prime numbres and pi digits required to make it even more powerful


## Lore

TODO: Intro

github/gitlab => bibliothèque
un dépot => un portail, une sorte de livre 
un fichier => un sort

la puissance des sorts dépend de leur version et donc un diff est suffisant dans le check

### git branching
- récuperer un dépot distant avec le sort dragon_killer réparti en plusieurs branches 
- ajouter un remote qui contient un sort d'amplicfication lui aussi réparti en plusieurs branches fusionner


### git forking
Travail collaboratif
2-4 étudiants sur un seul dépot.

chaque étudiant n'a accès qu'à un des sorts suivant sur des dépôts séparés :  
- diminution de la résitance à la magie => harry potter,  Albus Dumbledore, Lord Voldemort, Hogwarts 
- poison => The Chronicles of Narnia, Jadis,  king beyond the seas, Cair Paravel, 
- blocage de la régénération de vie => Sorceleur, Yennefer de Vengerberg, Ciri, ville Novigrad 
- sort d'artilelrie: lancer le sort 1000 fois d'un coup: caput le dragon => Eona, Eona, Sire Ido, Palais de Kygo

- création du fork et du remote en local pointant sur le fork
- création des remotes liés aux amélioration dont il a la charge + création des branches locales
- fusion branches locales dans spell et push dans le fork
- fusion des forks via l'interface web + MAJ local



le merge des branches des deux étudiants donne le sort final



